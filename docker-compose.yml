services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: kwt_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - kwt_network

  strapi:
    build:
      context: ./strapi
      dockerfile: Dockerfile
    container_name: kwt_strapi
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      NODE_ENV: ${NODE_ENV}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      PUBLIC_URL: ${PUBLIC_URL}
      REDIS_URL: redis://redis:6379
    ports:
      - '1337:1337'
    volumes:
      - ./strapi:/app
      - /app/node_modules
    networks:
      - kwt_network
    depends_on:
      - postgres
      - redis

  redis:
    image: redis:alpine
    container_name: kwt_redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - kwt_network
    command: redis-server --appendonly yes

networks:
  kwt_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: